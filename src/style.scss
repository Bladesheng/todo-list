* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

$font-stack: "Roboto", sans-serif;
$font-color-primary: rgb(199, 196, 189);
$font-color-secondary: rgb(25, 66, 146);

$color-primary: rgb(26, 28, 30);
$color-secondary: rgb(24, 26, 27);
$color-light: rgb(34, 37, 38);
$color-focus-dark: rgb(46, 49, 53);
$color-focus-blue: rgb(35, 92, 153);

html {
  height: -webkit-fill-available;
}

body {
  height: 100vh;
  min-height: 100vh;
  min-height: -webkit-fill-available;

  display: flex;
  flex-direction: column;
  align-items: center;

  font-family: $font-stack;
  color: $font-color-primary;
  background-color: $color-primary;
}

button,
input {
  font-family: $font-stack;
}

// stuff for hiding / showing dynamic input field
.dynamicText,
.dynamicInput {
  order: 1;
}

.dynamicText.active {
  display: none;
}

.dynamicInput {
  display: none;
}
.dynamicInput.active {
  display: inline-block;
}

.modalWrapper {
  display: none; // hidden by default
  position: fixed;
  z-index: 1; // sits on top
  left: 0;
  right: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.4);

  justify-content: center;
  align-items: center;

  .modal {
    background-color: $color-primary;
    padding: 2rem;
    border-radius: 5px;

    display: grid;
    grid-template-columns: 55vw 1.5rem;
    grid-template-rows: 3rem 1rem auto 1.3rem;
    row-gap: 1rem;
    align-items: center;

    h2.title {
      grid-column: 1 / 2;
      grid-row: 1 / 2;

      cursor: pointer;
    }
    input.title {
      grid-column: 1 / 2;
      grid-row: 1 / 2;

      padding: 0.2em;

      background-color: $color-secondary;
      border: 2px solid $color-focus-blue;
      border-radius: 3px;
      outline: none;

      color: $font-color-primary;
      font-family: $font-stack;
      font-size: 1.5rem;
      font-weight: 600;

      // to prevent the text from moving when you begin editing
      margin-left: -0.284em;
    }

    button.close {
      background: none;
      border: none;
      color: $font-color-primary;
      cursor: pointer;

      svg {
        height: 1.5rem;
      }
    }
    button.close:hover {
      filter: brightness(1.3);
    }

    div.description {
      font-weight: 500;
    }

    p.description.dynamicText {
      grid-column: 1 / 3;
      grid-row: 3 / 4;

      padding: 0.69em 0;
      padding-right: 0.5em;
      padding-top: 0.69em;

      cursor: pointer;
    }
    textarea.description {
      grid-column: 1 / 3;
      grid-row: 3 / 4;

      padding: 0.5em;
      margin-left: -0.63em;
      position: relative;
      top: 1px;
      left: 0.1px;

      background-color: $color-secondary;
      border: 2px solid $color-focus-blue;
      border-radius: 3px;
      outline: none;

      color: $font-color-primary;
      font-family: $font-stack;
      font-weight: 400;
      font-size: 1rem;

      resize: none; // prevent user from resizing textarea manually
    }

    .delete {
      grid-row: 4 / 5;
      grid-column: 2 / 3;

      background: none;
      border: none;
      color: $font-color-primary;

      svg {
        height: 1.3rem;
      }
    }
    .delete:hover {
      filter: brightness(1.3);
    }
  }
}

main {
  flex: 1 1 auto;

  width: 100%;
  overflow-x: scroll;
  display: grid;
  grid-template-columns: 40vw auto;
  grid-template-rows: 1fr auto;

  $sidebarTransition: left 0.4s ease;
  .sidebar {
    grid-column: 1 / 2;
    grid-row: 1 / 3;
    z-index: 3;

    position: relative;
    left: 0;
    transition: $sidebarTransition;

    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding: 10%;

    background-color: $color-primary;

    .logo {
      display: flex;
      align-items: center;
      gap: 0.3em;
      padding-bottom: 0.7rem;

      svg {
        height: 1.1rem;
      }

      h1 {
        font-size: 1rem;
      }
    }

    button,
    input {
      text-align: start;
      padding: 0.7em 0.2em;

      border: none;
      border-radius: 3px;
      background: none;

      color: $font-color-primary;
      font-weight: 500;

      cursor: pointer;
    }

    button:hover {
      background-color: $color-focus-dark;
    }

    button.newBoard {
      font-weight: 400;
    }

    input.newBoard {
      position: relative;
      right: 2px;
      bottom: 2px;

      background-color: $color-focus-dark;
      outline: none;
      border: 2px solid $color-focus-blue;
    }
  }
  .sidebar.hidden {
    left: -40vw;
    transition: $sidebarTransition;
  }

  button.burger {
    grid-column: 1 / 2;
    grid-row: 1 / 2;
    z-index: 2;
    margin: 15px 0 0 15px;

    width: 30px;
    height: 30px;

    border: none;
    background: none;
    cursor: pointer;

    svg {
      height: 30px;
      color: $font-color-primary;
    }
  }

  .currentBoard {
    grid-column: 1 / 3;
    grid-row: 1 / 3;
    z-index: 1;

    display: grid;
    grid-template-columns: auto auto;
    grid-template-rows: auto 1fr;
    gap: 0.8rem;

    background-color: black;
    padding: 10px;

    > .dynamicText,
    > .dynamicInput {
      order: 0;
    }

    h1 {
      align-self: center;
      padding: 0.3em;
      margin-left: 3rem;

      font-size: 1.1rem;
      font-weight: 500;

      cursor: pointer;
    }

    button.delete,
    input.rename {
      width: 4rem;
      height: 2.5rem;

      background-color: $color-secondary;
      border-radius: 3px;
      border: none;

      font-weight: 500;
      color: $font-color-primary;

      cursor: pointer;
    }
    button.delete:hover {
      filter: brightness(1.3);
    }

    input.rename {
      width: 100%;
      margin-left: 3rem;

      font-size: 1.1rem;
      padding: 0.3em;

      outline: none;
    }

    button.delete {
      justify-self: end;
    }

    .board {
      grid-column: 1 / 3;
      align-self: start;

      display: grid;
      grid-auto-flow: column;
      grid-auto-columns: 50vw;
      gap: 10px;

      .list {
        display: grid;
        grid-template-columns: 1rem calc(50vw - 2rem - 10px) 1rem;
        grid-row-gap: 10px;
        align-items: center;

        height: fit-content;
        padding: 5px;

        background-color: $color-light;
        border-radius: 5px;

        h2 {
          grid-column: 2 / 3;
          grid-row: 1 / 2;
          margin: 0em 0.5em;
          padding: 0.125em 0em;

          font-size: 1rem;
          font-weight: 500;
          cursor: pointer;
        }
        .headingInput {
          grid-column: 2 / 3;
          grid-row: 1 / 2;
          padding: 0em 0.37em;

          background-color: $color-secondary;
          color: $font-color-primary;
          font-family: $font-stack;
          font-weight: 500;
          font-size: 1rem;

          outline: none;
          border: 2px solid $color-focus-blue;
          border-radius: 3px;
        }

        .card {
          grid-column: 1 / 4;

          display: grid;
          grid-template-columns: 1fr auto;
          grid-template-rows: 1fr 1fr;

          background-color: $color-secondary;
          border-radius: 5px;

          h3 {
            grid-column: 1 / 2;
            grid-row: 1 / 3;
            align-self: stretch;
            padding-left: 0.3em;

            display: flex;
            align-items: center;

            font-size: 1rem;
            font-weight: 400;
            cursor: pointer;
          }
          .moveUpBtn {
            grid-column: 2 / 3;
            grid-row: 1 / 2;
          }
          .moveDownBtn {
            grid-column: 2 / 3;
            grid-row: 2 / 3;
          }
        }
        .card:hover {
          background-color: rgb(29, 32, 33);
        }

        .newCard,
        .newCardInput {
          grid-column: 1 / 3;
          order: 1;
          height: 40px;
          padding-left: 0.3em;
          margin-right: 0.3em;

          text-align: start;
          font-size: 1rem;
          font-weight: 400;
          color: $font-color-primary;

          background: none;
          border: none;
          border-radius: 3px;
          outline: none;

          cursor: pointer;
        }
        .newCardInput {
          background-color: $color-secondary;
        }
        .newCard:hover {
          filter: brightness(1.3);
        }

        .removeList {
          grid-column: 3 / 4;
          order: 1;
          justify-self: center;

          background: none;
          border: none;
          color: $font-color-primary;
          cursor: pointer;

          svg {
            height: 1.3rem;
          }
        }
        .removeList:hover {
          filter: brightness(1.3);
        }

        .moveBackBtn,
        .moveForwardBtn,
        .moveUpBtn,
        .moveDownBtn {
          align-self: center;
          justify-self: center;
          width: 20px;
          height: 20px;

          //border: 1px solid red;
          border: none;
          background: none;

          cursor: pointer;

          svg {
            width: 100%;
            height: 100%;

            color: $font-color-primary;
          }
          svg:hover {
            filter: brightness(1.5);
          }
        }
      }

      button.newList,
      input.newList {
        order: 1; // the button should always be last

        height: 2rem;
        padding-left: 0.5em;

        text-align: start;
        color: $font-color-primary;
        font-size: 1rem;
        font-weight: 500;

        background: none;
        border: none;
        outline: none;
        cursor: pointer;
      }
      input.newList {
        background-color: $color-primary;
        border-radius: 3px;
      }
      button.newList:hover {
        filter: brightness(1.3);
      }
    }
  }
}

footer {
  grid-column: 1 / 3;
  grid-row: 2 / 3;
  z-index: 1;

  text-align: center;
  padding: 0.6rem;
  font-size: 0.6rem;
  background-color: black;

  a {
    text-decoration: none;
    color: $font-color-secondary;
  }
}

@media (min-width: 600px) {
  .modalWrapper {
    .modal {
      grid-template-columns: 330px 1.5rem;
    }
  }

  main {
    grid-template-columns: 240px auto;

    .currentBoard {
      .board {
        grid-auto-columns: 290px;

        .list {
          grid-template-columns: 1rem calc(290px - 2rem - 10px) 1rem;
        }
      }
    }
  }
}
